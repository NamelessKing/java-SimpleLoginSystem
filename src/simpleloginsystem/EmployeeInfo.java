/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simpleloginsystem;
import java.sql.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils;
import simpleloginsystem.SqliteConnection;
/**
 *
 * @author NamelessKing
 */
public class EmployeeInfo extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    Connection connection = null;
    public EmployeeInfo() {
        initComponents();
        connection = SqliteConnection.dbConnector();
        refreshTable();
        fillComboBox();
        loadList();
    }
    
    //Aggiorna la tabella con i dati del database
    public void refreshTable(){
        try {
            String query = "SELECT EID,Name,Surname,Age FROM EmployeeInfo";
            PreparedStatement pst = connection.prepareStatement(query);
            ResultSet res = pst.executeQuery();
            emplyeeInfo_jTable.setModel(DbUtils.resultSetToTableModel(res));
            
            pst.close();
            res.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    /*Carica nel combo box i dati di una determinata colonna(in questo caso "Name")
    in modo che possano essere selezionati
    */
    public void fillComboBox(){
        try {
            //Query per prelevare tutti i dati nei campi del database
            String query = "SELECT * FROM EmployeeInfo";
            
            //invio della query al database e la restituzione del risultato
            PreparedStatement pst = connection.prepareStatement(query);
            ResultSet res = pst.executeQuery();
            
            /*Finche ce un item nell'oggetto res,il dato viene aggiunto al combobox*/
            while(res.next()){
                field_jComboBox.addItem(res.getString("Name"));
            }
            
            field_jComboBox.setSelectedIndex(field_jComboBox.getItemCount()-1);
            
            pst.close();
            res.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    /*Carica la jList dal database*/
    public void loadList(){
        try {
            String query = "SELECT * FROM EmployeeInfo";
            PreparedStatement pst = connection.prepareStatement(query);
            ResultSet res = pst.executeQuery();
            
            DefaultListModel dlm = new DefaultListModel();
            
            while(res.next()){
                dlm.addElement(res.getString("Name"));
            }
            
            employee_jList.setModel(dlm);
            
            pst.close();
            res.close();
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loadTable_jButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        emplyeeInfo_jTable = new javax.swing.JTable();
        eid_jLabel = new javax.swing.JLabel();
        name_jLabel = new javax.swing.JLabel();
        age_jLabel = new javax.swing.JLabel();
        surname_jLabel = new javax.swing.JLabel();
        eid_jTextField = new javax.swing.JTextField();
        name_jTextField = new javax.swing.JTextField();
        surname_jTextField = new javax.swing.JTextField();
        age_jTextField = new javax.swing.JTextField();
        save_jButton = new javax.swing.JButton();
        update_jButton = new javax.swing.JButton();
        delete_jButton = new javax.swing.JButton();
        field_jComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        employee_jList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loadTable_jButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        loadTable_jButton.setText("Load Employee Data");
        loadTable_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadTable_jButtonActionPerformed(evt);
            }
        });

        emplyeeInfo_jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emplyeeInfo_jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(emplyeeInfo_jTable);

        eid_jLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        eid_jLabel.setText("EID");
        eid_jLabel.setToolTipText("");

        name_jLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        name_jLabel.setText("Name");
        name_jLabel.setToolTipText("");

        age_jLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        age_jLabel.setText("Age");
        age_jLabel.setToolTipText("");

        surname_jLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        surname_jLabel.setText("Surname");
        surname_jLabel.setToolTipText("");

        save_jButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        save_jButton.setText("SAVE");
        save_jButton.setToolTipText("");
        save_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_jButtonActionPerformed(evt);
            }
        });

        update_jButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        update_jButton.setText("UPDATE");
        update_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_jButtonActionPerformed(evt);
            }
        });

        delete_jButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        delete_jButton.setText("DELETE");
        delete_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_jButtonActionPerformed(evt);
            }
        });

        field_jComboBox.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        field_jComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_jComboBoxActionPerformed(evt);
            }
        });

        employee_jList.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jScrollPane2.setViewportView(employee_jList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(update_jButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(save_jButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete_jButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(surname_jLabel)
                            .addComponent(age_jLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(surname_jTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                            .addComponent(age_jTextField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eid_jLabel)
                            .addComponent(name_jLabel))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(name_jTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                            .addComponent(eid_jTextField)))
                    .addComponent(field_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadTable_jButton)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(field_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadTable_jButton))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eid_jLabel)
                    .addComponent(eid_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(surname_jLabel)
                    .addComponent(surname_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(age_jLabel)
                    .addComponent(age_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(save_jButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(update_jButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delete_jButton)
                        .addGap(0, 112, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadTable_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadTable_jButtonActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT EID,Name,Surname,Age FROM EmployeeInfo";
            PreparedStatement pst = connection.prepareStatement(query);
            ResultSet res = pst.executeQuery();
            emplyeeInfo_jTable.setModel(DbUtils.resultSetToTableModel(res));
            
            pst.close();
            res.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_loadTable_jButtonActionPerformed

    private void save_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_jButtonActionPerformed
        // TODO add your handling code here:
       try {
            String query = "insert into EmployeeInfo(EID,name,surname,age) values(?,?,?,?)";
            PreparedStatement pst = connection.prepareStatement(query);
            
            pst.setString(1,eid_jTextField.getText());
            pst.setString(2,name_jTextField.getText());
            pst.setString(3,surname_jTextField.getText());
            pst.setString(4,age_jTextField.getText());
            pst.execute();
            
            refreshTable();
            JOptionPane.showMessageDialog(null, "Data Saved successfully");
            //ResultSet res = pst.executeQuery();
            
            //res.close();
            pst.close();
            
            field_jComboBox.removeAllItems();
            fillComboBox();
            loadList();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_save_jButtonActionPerformed

    private void update_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_jButtonActionPerformed
        // TODO add your handling code here:
        try {
            String query = "UPDATE EmployeeInfo SET EID='"+eid_jTextField.getText()+
                    "' ,name='"+name_jTextField.getText()+"' ,surname='"+surname_jTextField.getText()+
                    "' ,age='"+age_jTextField.getText()+
                    "' WHERE EID='"+eid_jTextField.getText()+"'";
            PreparedStatement pst = connection.prepareStatement(query);
            
            pst.execute();
            
            refreshTable();
            JOptionPane.showMessageDialog(null, "Data Udated successfully");
            //ResultSet res = pst.executeQuery();
       
            //res.close();
            pst.close();
            
            field_jComboBox.removeAllItems();
            fillComboBox();
            loadList();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_update_jButtonActionPerformed

    private void delete_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_jButtonActionPerformed
        // TODO add your handling code here:
        int action = JOptionPane.showConfirmDialog(null, "Do You really Want To Delete ?","Delete",JOptionPane.YES_NO_OPTION); 
        
        if(action == 0){
            try {
                String query = "DELETE FROM EmployeeInfo WHERE EID='"+eid_jTextField.getText()+"' ";
                PreparedStatement pst = connection.prepareStatement(query);

                pst.execute();

                refreshTable();
                //JOptionPane.showMessageDialog(null, "Data Deleted successfully");
                //ResultSet res = pst.executeQuery();

                //res.close();
                pst.close();

                field_jComboBox.removeAllItems();
                fillComboBox();
                loadList();

            } catch (Exception e) {
                 e.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_delete_jButtonActionPerformed

    private void field_jComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_jComboBoxActionPerformed
        // TODO add your handling code here:
        try {
            //Query per prelevare tutti i dati nei campi del database
            String query = "SELECT * FROM EmployeeInfo WHERE Name=?";
            
            //invio della query al database e la restituzione del risultato
            PreparedStatement pst = connection.prepareStatement(query);
            pst.setString(1, (String)field_jComboBox.getSelectedItem());
            
            ResultSet res = pst.executeQuery();
            
            while(res.next()){
                eid_jTextField.setText(res.getString("EID"));
                name_jTextField.setText(res.getString("Name"));
                surname_jTextField.setText(res.getString("Surname"));
                age_jTextField.setText(res.getString("Age"));
            }
            
            pst.close();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_field_jComboBoxActionPerformed

    private void emplyeeInfo_jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emplyeeInfo_jTableMouseClicked
        // TODO add your handling code here:
        try {
            int row = emplyeeInfo_jTable.getSelectedRow(); 
            String EID = emplyeeInfo_jTable.getModel().getValueAt(row, 0).toString();
            
            String query = "SELECT * FROM EmployeeInfo WHERE EID='"+EID+"' ";
            
            
            PreparedStatement pst = connection.prepareStatement(query);
            
            ResultSet res = pst.executeQuery();
            
            while(res.next()){
                eid_jTextField.setText(res.getString("EID"));
                name_jTextField.setText(res.getString("Name"));
                surname_jTextField.setText(res.getString("Surname"));
                age_jTextField.setText(res.getString("Age"));
            }
            
            pst.close();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_emplyeeInfo_jTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new EmployeeInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel age_jLabel;
    private javax.swing.JTextField age_jTextField;
    private javax.swing.JButton delete_jButton;
    private javax.swing.JLabel eid_jLabel;
    private javax.swing.JTextField eid_jTextField;
    private javax.swing.JList<String> employee_jList;
    private javax.swing.JTable emplyeeInfo_jTable;
    private javax.swing.JComboBox<String> field_jComboBox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton loadTable_jButton;
    private javax.swing.JLabel name_jLabel;
    private javax.swing.JTextField name_jTextField;
    private javax.swing.JButton save_jButton;
    private javax.swing.JLabel surname_jLabel;
    private javax.swing.JTextField surname_jTextField;
    private javax.swing.JButton update_jButton;
    // End of variables declaration//GEN-END:variables
}
